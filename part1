Deploy a pod named nginx-pod using the nginx:alpine image.
/kubectl run nginx-pod-barak --image nginx:alpine/

Deploy a messaging pod using the redis:alpine image with the labels set to tier=msg.
/kubectl run messaging --image redis:alpine --labels tier=msg/

Create a namespace named apx-x998-yourname
/kubectl create namespace apx-x998-barak/

Get the list of nodes in JSON format and store it in a file at /tmp/nodes-yourname
/kubectl get nodes -o json > ./tmp/nodes-barak/

Create a service messaging-service to expose the messaging application within the
cluster on port 6379.
/kubectl expose pod messaging --type ClusterIP --port 6379 --name messaging-service/

And with Yaml:(created with vi)
/apiVersion: v1
kind: Service
metadata:
  name: messaging-service
spec:
  selector:
    app: messaging
  ports:
    - protocol: TCP
      port: 6379
      targetPort: 6379
  type: ClusterIP
/
----
then apply -f to the file/

Create a deployment named hr-web-app using the image kodekloud/webapp-color
/kubectl create deployment hr-web-app --image kodekloud/webapp-color --replicas 2/

Create a static pod named static-busybox on the master node that uses the busybox
image and the command sleep 1000
/I did json file and moved it to Manifests folder. 
{
  "apiVersion": "v1",
  "kind": "Pod",
  "metadata": {
    "name": "static-busybox",
    "namespace": "default"
  },
  "spec": {
    "containers": [
      {
        "name": "busybox-container",
        "image": "busybox",
        "command": ["sleep", "1000"]
      }
    ],
    "restartPolicy": "Never"  //static 
  }
}/

Create a POD in the finance-yourname namespace named temp-bus with the image
redis:alpine
/kubectl create namespace finance-barak
kubectl run temp-bus --image redis:alpine --namespace finance-barak/

Create a Persistent Volume with the given specification
yaml:
apiVersion: v1
kind: PersistentVolume
metadata:
  name: pv-analytics
spec:
  capacity:
    storage: 100Mi
  accessModes:
    - ReadWriteMany
  hostPath:
    path: /pv/data-analytics #created automatically



 

